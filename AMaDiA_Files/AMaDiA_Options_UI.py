# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AMaDiA_Options_UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from AGeLib import *


class Ui_AMaDiA_Options(object):
    def setupUi(self, AMaDiA_Options):
        AMaDiA_Options.setObjectName("AMaDiA_Options")
        AMaDiA_Options.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(AMaDiA_Options)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.TabWidget = MTabWidget(self.centralwidget)
        self.TabWidget.setObjectName("TabWidget")
        self.tab_Options = QtWidgets.QWidget()
        self.tab_Options.setObjectName("tab_Options")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_Options)
        self.gridLayout_2.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_2.setSpacing(6)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.L_O = QtWidgets.QWidget(self.tab_Options)
        self.L_O.setObjectName("L_O")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.L_O)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.cb_U_EnableUnits = QtWidgets.QCheckBox(self.L_O)
        self.cb_U_EnableUnits.setChecked(True)
        self.cb_U_EnableUnits.setObjectName("cb_U_EnableUnits")
        self.gridLayout_4.addWidget(self.cb_U_EnableUnits, 15, 0, 1, 1)
        self.cb_O_AdvancedMode = QtWidgets.QCheckBox(self.L_O)
        self.cb_O_AdvancedMode.setObjectName("cb_O_AdvancedMode")
        self.gridLayout_4.addWidget(self.cb_O_AdvancedMode, 3, 0, 1, 1)
        self.line_17 = QtWidgets.QFrame(self.L_O)
        self.line_17.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_17.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_17.setObjectName("line_17")
        self.gridLayout_4.addWidget(self.line_17, 14, 0, 1, 1)
        self.cb_O_Remapper_local = QtWidgets.QCheckBox(self.L_O)
        self.cb_O_Remapper_local.setChecked(True)
        self.cb_O_Remapper_local.setObjectName("cb_O_Remapper_local")
        self.gridLayout_4.addWidget(self.cb_O_Remapper_local, 5, 0, 1, 1)
        self.line_2 = QtWidgets.QFrame(self.L_O)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_4.addWidget(self.line_2, 7, 0, 1, 1)
        self.cb_O_Remapper_global = QtWidgets.QCheckBox(self.L_O)
        self.cb_O_Remapper_global.setObjectName("cb_O_Remapper_global")
        self.gridLayout_4.addWidget(self.cb_O_Remapper_global, 6, 0, 1, 1)
        self.cb_O_PairHighlighter = QtWidgets.QCheckBox(self.L_O)
        self.cb_O_PairHighlighter.setChecked(True)
        self.cb_O_PairHighlighter.setObjectName("cb_O_PairHighlighter")
        self.gridLayout_4.addWidget(self.cb_O_PairHighlighter, 8, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.L_O)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_4.addWidget(self.line, 4, 0, 1, 1)
        self.g_O_HCopyStandard = QtWidgets.QWidget(self.L_O)
        self.g_O_HCopyStandard.setObjectName("g_O_HCopyStandard")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.g_O_HCopyStandard)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.comb_O_HCopyStandard = QtWidgets.QComboBox(self.g_O_HCopyStandard)
        self.comb_O_HCopyStandard.setObjectName("comb_O_HCopyStandard")
        self.comb_O_HCopyStandard.addItem("")
        self.comb_O_HCopyStandard.addItem("")
        self.comb_O_HCopyStandard.addItem("")
        self.comb_O_HCopyStandard.addItem("")
        self.comb_O_HCopyStandard.addItem("")
        self.comb_O_HCopyStandard.addItem("")
        self.gridLayout_12.addWidget(self.comb_O_HCopyStandard, 0, 1, 1, 1)
        self.Label_O_HCopyStandard = QtWidgets.QLabel(self.g_O_HCopyStandard)
        self.Label_O_HCopyStandard.setWordWrap(True)
        self.Label_O_HCopyStandard.setObjectName("Label_O_HCopyStandard")
        self.gridLayout_12.addWidget(self.Label_O_HCopyStandard, 0, 0, 1, 1)
        self.gridLayout_4.addWidget(self.g_O_HCopyStandard, 12, 0, 1, 1)
        self.line_3 = QtWidgets.QFrame(self.L_O)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_4.addWidget(self.line_3, 10, 0, 1, 1)
        self.line_19 = QtWidgets.QFrame(self.L_O)
        self.line_19.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_19.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_19.setObjectName("line_19")
        self.gridLayout_4.addWidget(self.line_19, 16, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_4.addItem(spacerItem, 17, 0, 1, 1)
        self.gridLayout_2.addWidget(self.L_O, 8, 0, 1, 1)
        self.TabWidget.addTab(self.tab_Options, "")
        self.tab_Appearance = QtWidgets.QWidget()
        self.tab_Appearance.setObjectName("tab_Appearance")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.tab_Appearance)
        self.gridLayout_13.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_13.setSpacing(0)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.ColourPicker = OptionsWidget_1_Appearance(self.tab_Appearance)
        self.ColourPicker.setObjectName("ColourPicker")
        self.gridLayout_13.addWidget(self.ColourPicker, 0, 0, 1, 1)
        self.TabWidget.addTab(self.tab_Appearance, "")
        self.tab_Flags = QtWidgets.QWidget()
        self.tab_Flags.setObjectName("tab_Flags")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_Flags)
        self.gridLayout_3.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_3.setSpacing(6)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.R_F = QtWidgets.QWidget(self.tab_Flags)
        self.R_F.setObjectName("R_F")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.R_F)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.cb_F_cancel = QtWidgets.QCheckBox(self.R_F)
        self.cb_F_cancel.setObjectName("cb_F_cancel")
        self.gridLayout_7.addWidget(self.cb_F_cancel, 10, 0, 1, 1)
        self.cb_F_simplify = QtWidgets.QCheckBox(self.R_F)
        self.cb_F_simplify.setChecked(True)
        self.cb_F_simplify.setObjectName("cb_F_simplify")
        self.gridLayout_7.addWidget(self.cb_F_simplify, 2, 0, 1, 1)
        self.cb_F_expand_trig = QtWidgets.QCheckBox(self.R_F)
        self.cb_F_expand_trig.setObjectName("cb_F_expand_trig")
        self.gridLayout_7.addWidget(self.cb_F_expand_trig, 13, 0, 1, 1)
        self.line_8 = QtWidgets.QFrame(self.R_F)
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.gridLayout_7.addWidget(self.line_8, 5, 0, 1, 1)
        self.g_F_Exp_fac = QtWidgets.QWidget(self.R_F)
        self.g_F_Exp_fac.setObjectName("g_F_Exp_fac")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.g_F_Exp_fac)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.cb_F_factor = QtWidgets.QCheckBox(self.g_F_Exp_fac)
        self.cb_F_factor.setAutoExclusive(True)
        self.cb_F_factor.setObjectName("cb_F_factor")
        self.gridLayout_8.addWidget(self.cb_F_factor, 1, 1, 1, 1)
        self.cb_F_expand = QtWidgets.QCheckBox(self.g_F_Exp_fac)
        self.cb_F_expand.setAutoExclusive(True)
        self.cb_F_expand.setObjectName("cb_F_expand")
        self.gridLayout_8.addWidget(self.cb_F_expand, 1, 0, 1, 1)
        self.cb_F_exp_fac_NONE = QtWidgets.QCheckBox(self.g_F_Exp_fac)
        self.cb_F_exp_fac_NONE.setChecked(True)
        self.cb_F_exp_fac_NONE.setAutoExclusive(True)
        self.cb_F_exp_fac_NONE.setObjectName("cb_F_exp_fac_NONE")
        self.gridLayout_8.addWidget(self.cb_F_exp_fac_NONE, 1, 2, 1, 1)
        self.gridLayout_7.addWidget(self.g_F_Exp_fac, 6, 0, 1, 1)
        self.line_10 = QtWidgets.QFrame(self.R_F)
        self.line_10.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_10.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_10.setObjectName("line_10")
        self.gridLayout_7.addWidget(self.line_10, 3, 0, 1, 1)
        self.line_12 = QtWidgets.QFrame(self.R_F)
        self.line_12.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_12.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_12.setObjectName("line_12")
        self.gridLayout_7.addWidget(self.line_12, 12, 0, 1, 1)
        self.cb_F_apart = QtWidgets.QCheckBox(self.R_F)
        self.cb_F_apart.setObjectName("cb_F_apart")
        self.gridLayout_7.addWidget(self.cb_F_apart, 11, 0, 1, 1)
        self.cb_F_powsimp = QtWidgets.QCheckBox(self.R_F)
        self.cb_F_powsimp.setChecked(True)
        self.cb_F_powsimp.setObjectName("cb_F_powsimp")
        self.gridLayout_7.addWidget(self.cb_F_powsimp, 4, 0, 1, 1)
        self.line_11 = QtWidgets.QFrame(self.R_F)
        self.line_11.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_11.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_11.setObjectName("line_11")
        self.gridLayout_7.addWidget(self.line_11, 9, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem1, 15, 0, 1, 1)
        self.line_9 = QtWidgets.QFrame(self.R_F)
        self.line_9.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_9.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_9.setObjectName("line_9")
        self.gridLayout_7.addWidget(self.line_9, 7, 0, 1, 1)
        self.g_F_collect = QtWidgets.QWidget(self.R_F)
        self.g_F_collect.setObjectName("g_F_collect")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.g_F_collect)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.cb_F_collect = QtWidgets.QCheckBox(self.g_F_collect)
        self.cb_F_collect.setObjectName("cb_F_collect")
        self.gridLayout_9.addWidget(self.cb_F_collect, 0, 0, 1, 1)
        self.tf_F_collect = QtWidgets.QLineEdit(self.g_F_collect)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tf_F_collect.sizePolicy().hasHeightForWidth())
        self.tf_F_collect.setSizePolicy(sizePolicy)
        self.tf_F_collect.setMaxLength(20)
        self.tf_F_collect.setObjectName("tf_F_collect")
        self.gridLayout_9.addWidget(self.tf_F_collect, 1, 0, 1, 1)
        self.gridLayout_7.addWidget(self.g_F_collect, 8, 0, 1, 1)
        self.line_14 = QtWidgets.QFrame(self.R_F)
        self.line_14.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_14.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_14.setObjectName("line_14")
        self.gridLayout_7.addWidget(self.line_14, 14, 0, 1, 1)
        self.gridLayout_3.addWidget(self.R_F, 3, 2, 1, 1)
        self.L_F = QtWidgets.QWidget(self.tab_Flags)
        self.L_F.setObjectName("L_F")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.L_F)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem2, 9, 0, 1, 1)
        self.g_F_solveFor = QtWidgets.QWidget(self.L_F)
        self.g_F_solveFor.setObjectName("g_F_solveFor")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.g_F_solveFor)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.tf_F_solveFor = QtWidgets.QLineEdit(self.g_F_solveFor)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tf_F_solveFor.sizePolicy().hasHeightForWidth())
        self.tf_F_solveFor.setSizePolicy(sizePolicy)
        self.tf_F_solveFor.setMaxLength(20)
        self.tf_F_solveFor.setObjectName("tf_F_solveFor")
        self.gridLayout_10.addWidget(self.tf_F_solveFor, 0, 1, 1, 1)
        self.cb_F_solveFor = QtWidgets.QCheckBox(self.g_F_solveFor)
        self.cb_F_solveFor.setObjectName("cb_F_solveFor")
        self.gridLayout_10.addWidget(self.cb_F_solveFor, 0, 0, 1, 1)
        self.gridLayout_5.addWidget(self.g_F_solveFor, 5, 0, 1, 1)
        self.cb_F_Digit_Grouping = QtWidgets.QCheckBox(self.L_F)
        self.cb_F_Digit_Grouping.setChecked(True)
        self.cb_F_Digit_Grouping.setObjectName("cb_F_Digit_Grouping")
        self.gridLayout_5.addWidget(self.cb_F_Digit_Grouping, 7, 0, 1, 1)
        self.line_6 = QtWidgets.QFrame(self.L_F)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.gridLayout_5.addWidget(self.line_6, 4, 0, 1, 1)
        self.line_13 = QtWidgets.QFrame(self.L_F)
        self.line_13.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_13.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_13.setObjectName("line_13")
        self.gridLayout_5.addWidget(self.line_13, 6, 0, 1, 1)
        self.cb_F_EvalF = QtWidgets.QCheckBox(self.L_F)
        self.cb_F_EvalF.setChecked(True)
        self.cb_F_EvalF.setObjectName("cb_F_EvalF")
        self.gridLayout_5.addWidget(self.cb_F_EvalF, 3, 0, 1, 1)
        self.line_20 = QtWidgets.QFrame(self.L_F)
        self.line_20.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_20.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_20.setObjectName("line_20")
        self.gridLayout_5.addWidget(self.line_20, 8, 0, 1, 1)
        self.gridLayout_3.addWidget(self.L_F, 3, 0, 1, 1)
        self.Label_FlagExplanation = QtWidgets.QLabel(self.tab_Flags)
        self.Label_FlagExplanation.setWordWrap(True)
        self.Label_FlagExplanation.setObjectName("Label_FlagExplanation")
        self.gridLayout_3.addWidget(self.Label_FlagExplanation, 1, 0, 1, 3)
        self.line_4 = QtWidgets.QFrame(self.tab_Flags)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout_3.addWidget(self.line_4, 2, 0, 1, 3)
        self.line_7 = QtWidgets.QFrame(self.tab_Flags)
        self.line_7.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.gridLayout_3.addWidget(self.line_7, 3, 1, 1, 1)
        self.TabWidget.addTab(self.tab_Flags, "")
        self.tab_DevOptions = QtWidgets.QWidget()
        self.tab_DevOptions.setObjectName("tab_DevOptions")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tab_DevOptions)
        self.gridLayout_6.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.L_D = QtWidgets.QWidget(self.tab_DevOptions)
        self.L_D.setObjectName("L_D")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.L_D)
        self.gridLayout_11.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.line_16 = QtWidgets.QFrame(self.L_D)
        self.line_16.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_16.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_16.setObjectName("line_16")
        self.gridLayout_11.addWidget(self.line_16, 1, 0, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_11.addItem(spacerItem3, 4, 0, 1, 1)
        self.cb_D_NewSolver = QtWidgets.QCheckBox(self.L_D)
        self.cb_D_NewSolver.setObjectName("cb_D_NewSolver")
        self.gridLayout_11.addWidget(self.cb_D_NewSolver, 0, 0, 1, 1)
        self.cb_D_NoEvalFile = QtWidgets.QCheckBox(self.L_D)
        self.cb_D_NoEvalFile.setObjectName("cb_D_NoEvalFile")
        self.gridLayout_11.addWidget(self.cb_D_NoEvalFile, 2, 0, 1, 1)
        self.line_18 = QtWidgets.QFrame(self.L_D)
        self.line_18.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_18.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_18.setObjectName("line_18")
        self.gridLayout_11.addWidget(self.line_18, 3, 0, 1, 1)
        self.gridLayout_6.addWidget(self.L_D, 2, 0, 1, 1)
        self.Label_DevOption_Explanation = QtWidgets.QLabel(self.tab_DevOptions)
        self.Label_DevOption_Explanation.setWordWrap(True)
        self.Label_DevOption_Explanation.setObjectName("Label_DevOption_Explanation")
        self.gridLayout_6.addWidget(self.Label_DevOption_Explanation, 0, 0, 1, 1)
        self.line_15 = QtWidgets.QFrame(self.tab_DevOptions)
        self.line_15.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_15.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_15.setObjectName("line_15")
        self.gridLayout_6.addWidget(self.line_15, 1, 0, 1, 1)
        self.TabWidget.addTab(self.tab_DevOptions, "")
        self.gridLayout.addWidget(self.TabWidget, 0, 0, 1, 1)
        AMaDiA_Options.setCentralWidget(self.centralwidget)

        self.retranslateUi(AMaDiA_Options)
        self.TabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(AMaDiA_Options)

    def retranslateUi(self, AMaDiA_Options):
        _translate = QtCore.QCoreApplication.translate
        AMaDiA_Options.setWindowTitle(_translate("AMaDiA_Options", "MainWindow"))
        self.cb_U_EnableUnits.setToolTip(_translate("AMaDiA_Options", "If checked the calculator is sensitive for units.<br>\n"
"For example m is no longer a variable but instead \"meter\"."))
        self.cb_U_EnableUnits.setText(_translate("AMaDiA_Options", "Enable Units"))
        self.cb_O_AdvancedMode.setToolTip(_translate("AMaDiA_Options", "If checked more notifications are displayed, more context menu options are displayed and various other functions become available.<br>\n"
"This can clutter the context menus, flood you with neglectable errors and unlock dangerous functions that should only be used if you know what you are doing."))
        self.cb_O_AdvancedMode.setText(_translate("AMaDiA_Options", "Advanced Mode"))
        self.cb_O_Remapper_local.setToolTip(_translate("AMaDiA_Options", "<html><head/><body><p>Use (Shift+)AltGr+Key to type Mathematical Symbols.<br/>Refer to AMaDiA_ReplacementTables for mapping.<br/>For a Remapping that works on all applications use the Global Remapper in the Options.</p></body></html>"))
        self.cb_O_Remapper_local.setText(_translate("AMaDiA_Options", "Local Keyboard Remapper"))
        self.cb_O_Remapper_global.setToolTip(_translate("AMaDiA_Options", "<html><head/><body><p>Use (Shift+)AltGr+Key to type Mathematical Symbols.<br/>Refer to AMaDiA_ReplacementTables for mapping.<br/>This works for all inputs including those in other applications!<br/>(This might cause problems with anti cheat systems in games. Use with care.)</p></body></html>"))
        self.cb_O_Remapper_global.setText(_translate("AMaDiA_Options", "Global Keyboard Remapper"))
        self.cb_O_PairHighlighter.setToolTip(_translate("AMaDiA_Options", "Syntax highlighter for brackets, Integrals, etc."))
        self.cb_O_PairHighlighter.setText(_translate("AMaDiA_Options", "Pair Highlighter"))
        self.comb_O_HCopyStandard.setItemText(0, _translate("AMaDiA_Options", "Normal"))
        self.comb_O_HCopyStandard.setItemText(1, _translate("AMaDiA_Options", "Solution"))
        self.comb_O_HCopyStandard.setItemText(2, _translate("AMaDiA_Options", "Equation"))
        self.comb_O_HCopyStandard.setItemText(3, _translate("AMaDiA_Options", "Text"))
        self.comb_O_HCopyStandard.setItemText(4, _translate("AMaDiA_Options", "LaTeX"))
        self.comb_O_HCopyStandard.setItemText(5, _translate("AMaDiA_Options", "LaTeX Equation"))
        self.Label_O_HCopyStandard.setText(_translate("AMaDiA_Options", "Set what ctrl+c should try to copy when having a single history item selected"))
        self.TabWidget.setTabText(self.TabWidget.indexOf(self.tab_Options), _translate("AMaDiA_Options", "Options"))
        self.TabWidget.setTabText(self.TabWidget.indexOf(self.tab_Appearance), _translate("AMaDiA_Options", "Appearance"))
        self.cb_F_cancel.setToolTip(_translate("AMaDiA_Options", "Will take any rational function and put it into the standard canonical form p/q"))
        self.cb_F_cancel.setText(_translate("AMaDiA_Options", "Cancel"))
        self.cb_F_simplify.setToolTip(_translate("AMaDiA_Options", "Applies standard simplifications"))
        self.cb_F_simplify.setText(_translate("AMaDiA_Options", "Simplify"))
        self.cb_F_expand_trig.setToolTip(_translate("AMaDiA_Options", "Set this to expand trigonometric functions, that is, apply the sum or double angle identities"))
        self.cb_F_expand_trig.setText(_translate("AMaDiA_Options", "Expand trigonometric functions"))
        self.cb_F_factor.setToolTip(_translate("AMaDiA_Options", "Takes a polynomial and factors it into irreducible factors (Inverse of expand)"))
        self.cb_F_factor.setText(_translate("AMaDiA_Options", "Factor"))
        self.cb_F_expand.setToolTip(_translate("AMaDiA_Options", "Solves all multiplications and powers"))
        self.cb_F_expand.setText(_translate("AMaDiA_Options", "Expand"))
        self.cb_F_exp_fac_NONE.setText(_translate("AMaDiA_Options", "None"))
        self.cb_F_apart.setToolTip(_translate("AMaDiA_Options", "Performs a partial fraction decomposition on a rational function"))
        self.cb_F_apart.setText(_translate("AMaDiA_Options", "Apart"))
        self.cb_F_powsimp.setToolTip(_translate("AMaDiA_Options", "Simplifies/Collects exponents"))
        self.cb_F_powsimp.setText(_translate("AMaDiA_Options", "Simplify exponents"))
        self.cb_F_collect.setToolTip(_translate("AMaDiA_Options", "Collects common powers of a term in an expression"))
        self.cb_F_collect.setText(_translate("AMaDiA_Options", "Collect term:"))
        self.tf_F_collect.setText(_translate("AMaDiA_Options", "x"))
        self.tf_F_solveFor.setText(_translate("AMaDiA_Options", "y"))
        self.cb_F_solveFor.setToolTip(_translate("AMaDiA_Options", "Set the variables for which equations should be solved.<br>\n"
"You can separate variables with commas to create a priority list.<br>\n"
"If turned off the variable will be automatically determined based on the equation."))
        self.cb_F_solveFor.setText(_translate("AMaDiA_Options", "Solve for Variable:"))
        self.cb_F_Digit_Grouping.setToolTip(_translate("AMaDiA_Options", "If checked the display in the calculator tab groups digits.<br>\n"
"For example 5000666.12345 is displayed as 5,000,666.12345<br>\n"
"This only influences the displayed text and does not change anything else."))
        self.cb_F_Digit_Grouping.setText(_translate("AMaDiA_Options", "Group digits for display"))
        self.cb_F_EvalF.setToolTip(_translate("AMaDiA_Options", "If unchecked functions that would return a float are not evaluated to ensure readability.<br>\n"
"Holding ctrl while pressing return inverts this setting in single line input fields."))
        self.cb_F_EvalF.setText(_translate("AMaDiA_Options", "Evaluate Functions"))
        self.Label_FlagExplanation.setText(_translate("AMaDiA_Options", "These Flags are used when evaluating an equation.<br>\n"
"All Flags except \"Evaluate Functions\" are read during the calculations and thus should not be changed while a calculation is running."))
        self.TabWidget.setTabText(self.TabWidget.indexOf(self.tab_Flags), _translate("AMaDiA_Options", "Calculator Flags"))
        self.cb_D_NewSolver.setToolTip(_translate("AMaDiA_Options", "Use the new experimental solver.<br>\n"
"The new solver is a long term project.<br>\n"
"This checkbox is only for development purposes and should never be checked by users.<br>\n"
"The new solver can not solve anything at the moment."))
        self.cb_D_NewSolver.setText(_translate("AMaDiA_Options", "Use New Solver"))
        self.cb_D_NoEvalFile.setToolTip(_translate("AMaDiA_Options", "Use th NoEvalFile that uses \"with sympy.evaluate(False)\"<br>\n"
"It still influences the main process and thus can mess up all calculations.<br>\n"
"To keep the calculator reliable this checkbox should be kept unchecked.<br>\n"
"Sympy\'s \"with sympy.evaluate(False)\" is currently experimental anyways."))
        self.cb_D_NoEvalFile.setText(_translate("AMaDiA_Options", "Enable LaTeX No Eval"))
        self.Label_DevOption_Explanation.setText(_translate("AMaDiA_Options", "WARNING: This page is only for development purposes and should not be used by normal users. Everything on this page can crash the program or cause other nasty bugs."))
        self.TabWidget.setTabText(self.TabWidget.indexOf(self.tab_DevOptions), _translate("AMaDiA_Options", "DevOptions"))
from AGeLib.AGeWidgets import MTabWidget
from AGeLib.AGeSpecialWidgets import OptionsWidget_1_Appearance
